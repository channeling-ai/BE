plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'channeling'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // s3
    implementation 'software.amazon.awssdk:s3:2.25.61'

    // .env
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JWT
    implementation 'com.auth0:java-jwt:4.5.0'
    implementation 'com.auth0:jwks-rsa:0.20.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

def querydslDir = "src/main/generated"


tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean {
    delete file('src/main/generated')
}
